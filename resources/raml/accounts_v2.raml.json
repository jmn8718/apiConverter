{
  "title": "Accounts (V2) - 3 Legged (Alpha Release)",
  "version": "v1",
  "baseUri": "https://sandbox-openplatform.bbvacompass.com",
  "documentation": [
    {
      "title": "",
      "content": "## **Last update:** 11/30/2015 ([Change Log](http://docs.changelog.apiary.io/))\n\nAPI to use BBVA Compass accounts.\n\n## Basics\n\n### Return Codes\n\nThe API will return always an HTTP STATUS\n\nCode | Description\n--- | ---\n**2XX** | The API call was successful.\n**4XX** | The API call had an error. The error will be encoded in the body of the response.\n**5XX** | The API call was unsuccessful. You should retry later.\n\nSpecific error codes\n\nCode | Description\n--- | ---\n`200 OK` | The request was successful.\n`201 Created` | The request was successful and a resource is created.\n`400 Bad Request` | The request could not be understood or required parameters were missing.\n`401 Unauthorized` | Authentication failed or user doesn't have permissions for requested operation.\n`403 Forbidden` | Access denied, the operation is not allowed.\n`404 Not Found` | Resource was not found.\n`405 Method Not Allowed` | Requested method is not supported for resource.\n`409 Conflict` | Request could not be completed due to conflicting information.\n`500 Internal server error` | Internal server error. Try again later.\n`503 Service Unavailable` | Service is temporary unavailable. Try again later.\n\n### Return Schema when errors\n\nError response schema :\n\n            {\n              \"type\": \"object\",\n              \"properties\": {\n                \"result\": {\n                  \"type\": \"object\",\n                  \"required\": true,\n                  \"properties\": {\n                    \"code\": { \"type\": \"number\", \"required\": true },\n                    \"info\": { \"type\": \"string\", \"required\": true },\n                    \"internal_code\": { \"type\": \"string\"},\n                    \"errors\": {\n                      \"type\": [\"array\", \"null\"],\n                      \"uniqueItems\": true,\n                      \"items\": {\n                        \"type\": [\"object\", \"null\"],\n                        \"properties\": {\n                          \"errorCode\":   { \"type\":\"string\", \"required\": true },\n                          \"customerDescription\": { \"type\":\"string\", \"required\": true },\n                          \"shortDescription\": { \"type\":\"boolean\", \"required\": false },\n                          \"system\":  { \"type\":\"string\", \"required\": true },\n                          \"severity\":  { \"type\":\"string\", \"required\": true },\n                          \"techCode\":  { \"type\":\"string\", \"required\": true },\n                          \"language\":  { \"type\":\"string\", \"required\": true },\n                          \"field\":  { \"type\":\"string\", \"required\": true },\n                          \"serialversionuid\":  { \"type\":\"string\", \"required\": true },\n                          \"source\":  { \"type\":\"string\", \"required\": true }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n\nWhen there is a 4XX error, the errors array will be informed to help debug errors.\n\nExample :\n\n```\n{\n    \"result\": {\n        \"code\": \"400\",\n        \"info\": \"Bad Request\",\n        \"errors\": [\n            {\n                \"errorCode\": \"COPP-102\",\n                \"customerDescription\": \"Customer Type value must be X or Y\",\n                \"shortDescription\": \"Field not properly informed\",\n                \"system\": \"COPP\",\n                \"severity\": \"MAJOR\",\n                \"system\": null,\n                \"techCode\": null,\n                \"language\": \"US\",\n                \"field\": null,\n                \"serialversionuid\": 1,\n                \"source\": null\n            }\n        ]\n    }\n}\n```\n\n### Allowed HTTPs methods:\n\nMethod | Description\n--- | ---\n`POST` | To create a new resource, or execute a operation that modifies data.\n`PUT` | To update a resource\n`GET` | Get a resource or list of resources\n`DELETE` | To delete resource\n\n## Idempotence in POST, PUT and DELETE Methods\n\nThis API provides a mechanism to ensure that operations are idempotent. Each call must have a header X-Unique-Transaction-ID\ngenerated by the client that allows the server to identify each unique call. For methods that change data on the server (POST, PUT and DELETE) if\nthe server receives a call with a duplicated `X-Unique-Transaction-ID` in a week timeframe, the service won't be executed again but the response\nwill be the same as the first time it was executed.\n\nThis allows to avoid problems with network connectivity as a client can submit a POST, PUT or DELETE call again, knowing that it will be executed only once.\nIf the intent of the client is to execute the service again, then it must provide a different `X-Unique-Transaction-ID`.\n\n**Requests/responses with a 500 response are no longer cached**\n\nWhen calling with the same `X-Unique-Transaction-id`:\n\n* If previous request was an error (http 4xx/5xx), new request should be executed. (No cache of error requests)\n\n* If previous request was not an error, new request shouldn't be executed but return:\n\n```\n{\n  \"result\": {\n    \"code\": 409,\n    \"info\": \"Duplicated X-Unique-Transaction-ID\",\n    \"internal_code\": \"duplicate_transaction_id\"\n  },\n   \"previous_response\":{\n      \"result\":{\n         \"code\":200,\n         \"info\":\"User's reference information\"\n      },\n      \"data\":{\n         \"user_reference_id\":\"1234-146a-1bsd-vbbd\",\n         \"links\":[\n            {\n               \"rel\":\"self\",\n               \"title\":\"Get user detail\",\n               \"href\":\"/api/v2/me\",\n               \"method\":\"GET\"\n            }\n         ]\n      }\n   }\n}\n```\n\nwhere key is the `X-Unique-Transaction-Id` on the request.\n\nWhen calling service GET /api/v2/servicecalls/234234-324324-234234-222, will return the same information as returned on the first call.\n\n* If service is not the same, service will return a 400 http response code with the following body:\n```\n{\n  \"result\": {\n    \"code\": 400,\n    \"info\": \"Bad Request\",\n    \"internal_code\": \"duplicate_transaction_id_method\"\n  }\n}\n```\n\n* If body is not the same, service will return a 400 http response code with the following body:\n```\n{\n  \"result\": {\n    \"code\": 400,\n    \"info\": \"Bad Request\",\n    \"internal_code\": \"duplicate_transaction_id_body\"\n  }\n}\n```\n\n\nThis mechanism is only working 7 days after the first call is executed\n\n## Security and authentication\n\nAll calls to the API must have an Authentication header, with a token that identifies the caller\n\n```\nAuthorization: Tsec KVAd0QtqXrZKdqlpwLYdQuoI4cioUBJOTzpfu-zcN2sXhYZgG-SgtUh-Uua4ViGodLC0sITdp-zrQczvgAUwtp0RQtN3SB4DmYb0mQjvQrgnYV5j0b-oQqdeFsfqEqMZTBmtyB7zuT6--qiBbNdRk2I-q9Hza0N5KxHB4JidvvhuQggwOOxyB40mRIVc6KI2ekirKxAVrtjtVaUHJEvpDQ\n```\n\nThere are two types of clients of the API :\n\n* __Applications__\n\n* __BBVA Compass Customers__\n\nThe login process is explained in the [Open Platform API Security Documentation](http://docs.openplatformsecurity.apiary.io/) section, but in summary :\n\n* Applications logs using clientId and clientSecret.\n\n* BBVA Compass Customers logs via BBVA Connect screens, using username and password, and a client_id to specify via which app the user is login in.\n\n\n## Headers\n\nAll headers in the Open Platform follows [Hypertext Transfer Protocol RFC] (http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html)\n\nName                           | Type   | Required | Description\n------------------------------ | ------ | -------- | ---\n`Accept`                       | String | required | Header with the format expected in the response. If not specified it will be __application/json__\n`X-Unique-Transaction-ID`      | String | required | Consumer-generated Global identifier for traceability and idempotence purposes. The format is left open to the client always that it avoids duplicates. Every single request must contain a new X-Unique-Transaction-Id. If a request with the same X-Unique-Transaction-Id has been requested in the last 7 days, the same response will be returned but no action will be performed. Example in UUID format : de305d54-75b4-431b-adb2-eb6b9e546014\n`Authorization`                | String | required | Header with the access token necessary to consume each service, the format is **Authorization: Tsec <token>**. Please, refer to [Open Platform API Security Documentation](http://docs.openplatformsecurity.apiary.io/) for details.\n`Accept-Language`                     | String | optional | Preferred language of the client, responses will be localized to this language if available. The name space of language tags is administered by the [IANA] (http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry).\n`Content-Type`                 | String | required | Header to specify request content format. Typically __application/json__\n\n### X-Unique-Transaction-ID\n\nA header containing a consumer-generated UUID is used for transactional tracing throughout the architecture, and to allow idempotence for POST, PUT and DELETE methods.\n\nIf the `X-Unique-Transaction-ID` header is missing the server will respond with (`400 Bad Request`) and the errorCode **transaction_id_missing**:\n\n```json\n{\n    \"result\": {\n        \"code\": 400,\n        \"message\": \"Missing X-Unique-Transaction-ID header\",\n        \"internal_code\": \"transaction_id_missing\"\n    }\n}\n```\n\n### Language\n\n\nService consumers can select a language of a service, by using standard HTTP headers.\n\n    Accept-Language: en-US, es\n\nIf headers are not specified, the service will return **English by default**\n\n## Versioning\n\nAs part of the URL, the version of the API must be specified as follows:\n\n```\n/v{version_number}/service_name\n```\n\n{version_number} is mandatory.\n\n\n## Browsing the API\n\nThis API implements HATEOAS : Hypermedia as the Engine of Application State\n\n### HATEOAS\n\nEach resource will include an attribute **links** that will contain a list of related resources and available actions\n\n```\n    \"links\":    [\n      { \"rel\": \"self\", \"title\": \"Get account detail\", \"href\": \"/v1/api/accounts/01-1234\" },\n      { \"rel\": \"unlink\", \"title\": \"Delete Link from account to application\", \"href\": \"/v1/api/accounts/unlink\", \"method\": \"POST\"},\n      { \"rel\": \"cashin\", \"title\": \"Transfer money to this bbva account\", \"href\": \"/v1/api/accounts/01-1234/cashin\", \"method\": \"POST\"},\n      { \"rel\": \"cashout\",  \"title\": \"Transfer money from this bbva account\", \"href\": \"/v1/api/accounts/01-1234/cashout\", \"method\": \"POST\"}\n    ]\n```\n\nEach link will have :\n\n| Field   | Description                                                |\n|---------|------------------------------------------------------------|\n| name    | An identifier of the relation                              |\n| title   | A description of the related resource action               |\n| href    | Relative URI of the resource                               |\n| method  | HTTP method to navigate to the relation *if ommited, GET*  |\n\n## Formats\n\n| format name   | description |\n| ------------- | ----------- |\n| string (99)   | string format, if followed by a number between (9), that's the max length for the string\n| number (99,9) | numeric format, if followed by a number between (9) it defines the max length of the number, if followed by a comma (99,9) it defines the maximum number of decimals\n| date          | string with format iso-8601 for dates : **yyyy-MM-dd**\n| timestamp     | string with format iso-8601 for combined date and time : **yyyy-MM-ddTHH:mm:ssZ** if date in UTC or **yyyy-MM-ddTHH:mm:ss�hh:mm** if date includes time offset from UTC. To avoid problems, dates without time offset or UTC flag will be rejected.\n"
    }
  ],
  "protocols": [
    "HTTPS"
  ],
  "resources": [
    {
      "description": "Service to inquire the global API status.\n",
      "relativeUri": "/api/v2/health",
      "methods": [
        {
          "description": "",
          "protocols": [
            "HTTPS"
          ],
          "method": "get"
        }
      ],
      "relativeUriPathSegments": [
        "api",
        "v2",
        "health"
      ]
    },
    {
      "description": "Calls to this services must include an USER-TSEC, so when you're getting the user information, you're getting the logged\nuser information.\n",
      "relativeUri": "/api/v2/me",
      "methods": [
        {
          "description": "Returns authenticated user account basic information.\n\nFor the moment this service returns an unique generated internal user identifier (user_reference_id).\nThis is not the real BBVA internal user id, as it will be a unique value, but each user will have a different\nuser_reference_id, for identification purposes.\n",
          "protocols": [
            "HTTPS"
          ],
          "method": "get"
        }
      ],
      "relativeUriPathSegments": [
        "api",
        "v2",
        "me"
      ]
    },
    {
      "description": "",
      "relativeUri": "/api/v2/me/notify",
      "methods": [
        {
          "description": "Method will send a SMS text message or an email message to a user based on the preferred method set on that user's profile.\n\n#### Attributes for the json body parameter\n\n| name            | type         | required | description       |\n|-----------------|--------------|----------|-------------------|\n| otp             | number       | required | 6 digit one-time-pin generated to authenticate a specific user  |\n",
          "protocols": [
            "HTTPS"
          ],
          "method": "post"
        }
      ],
      "relativeUriPathSegments": [
        "api",
        "v2",
        "me",
        "notify"
      ]
    },
    {
      "description": "",
      "relativeUri": "/api/v2/users/accounts",
      "relativeUriPathSegments": [
        "api",
        "v2",
        "users",
        "accounts"
      ]
    },
    {
      "description": "",
      "relativeUri": "/api/v2/accounts{?type,linked}",
      "methods": [
        {
          "description": "Method to return accounts basic information for the authenticated user\n\n* Account types\n\ncode | description |\n--- | ---\n01 | checkings |\n02 | savings | \n",
          "protocols": [
            "HTTPS"
          ],
          "method": "get"
        }
      ],
      "relativeUriPathSegments": [
        "api",
        "v2",
        "accounts{?type,linked}"
      ],
      "uriParameters": {
        "?type,linked": {
          "type": "string",
          "required": true,
          "displayName": "?type,linked"
        }
      }
    },
    {
      "description": "",
      "relativeUri": "/api/v2/accounts/{account_id}",
      "methods": [
        {
          "description": "Returns detailed data on an account.\n",
          "protocols": [
            "HTTPS"
          ],
          "method": "get"
        }
      ],
      "relativeUriPathSegments": [
        "api",
        "v2",
        "accounts",
        "{account_id}"
      ],
      "uriParameters": {
        "account_id": {
          "type": "string",
          "required": true,
          "displayName": "account_id"
        }
      }
    },
    {
      "description": "",
      "relativeUri": "/api/v2/accounts/{account_id}/cashin",
      "methods": [
        {
          "description": "Method to transfer from `BBVA Settlement Account` to `BBVA User Account`.  Money is withdrawn from user's own `APP User Account` and deposited in user's own `BBVA User Account` with id={account_id}.\n\n#### Attributes for the json body parameter\n\nName | Type | Required | Description\n--- | --- | --- | ---\n__amount__                   | Number | Required | Amount of money to transfer.\n__currency__                  | String | Required | Currency of the indicated amount. ISO-4217 format: USD, EUR ...\n__third_party_reference_id__    | String | Required | Number of up to 17 digits used for matching and reconciliation in settlement accounts.\n__description__              | String (60) | Optional | Associated text describing the transfer's reason. Max Length 60\n__type__                     | String | Optional | Parameter to identify special cashin operations (refunds when identity thefts, network problems, etc). **TBD** type values.\n\n\n#### Response Codes\n\nStatus | Code | Description\n--- | --- | ---\n__201__              | OK | The operation completed successfully\n__400__              | invalid_currency | The currency provided is not valid\n__400__              | invalid_amount | The amount format is not valid\n__400__              | third_party_reference_id_duplicated | This third_party_reference_id already exists\n__400__              | invalid_third_party_reference_id | The third party reference id is not valid\n__400__              | description_invalid | Limit Reached On Description Field, Max 60 Characters\n__403__              | account_not_linked | The account was not linked previously\n__404__              | account_not_found | The account was not found\n",
          "protocols": [
            "HTTPS"
          ],
          "method": "post"
        }
      ],
      "relativeUriPathSegments": [
        "api",
        "v2",
        "accounts",
        "{account_id}",
        "cashin"
      ],
      "uriParameters": {
        "account_id": {
          "type": "string",
          "required": true,
          "displayName": "account_id"
        }
      }
    },
    {
      "description": "",
      "relativeUri": "/v2/api/accounts/{account_id}/cashin/{third_party_reference_id}",
      "methods": [
        {
          "description": "Method to remove a cashin operation. The operation will be removed from the transaction logs.\nA cashin operation can only be reversed in the same day it was created.\n\n#### Attributes for the json body parameter\n\nName | Type | Required | Description\n--- | --- | --- | ---\n__amount__                 | Number | Required | Amount of money to transfer.\n__currency__               | String | Required | Currency of the indicated amount. ISO-4217 format: USD, EUR ...\n__description__            | String (60) | Optional | Associated text describing the reverse's reason. Max Length 60\n",
          "protocols": [
            "HTTPS"
          ],
          "method": "delete"
        }
      ],
      "relativeUriPathSegments": [
        "v2",
        "api",
        "accounts",
        "{account_id}",
        "cashin",
        "{third_party_reference_id}"
      ],
      "uriParameters": {
        "account_id": {
          "type": "string",
          "required": true,
          "displayName": "account_id"
        },
        "third_party_reference_id": {
          "type": "string",
          "required": true,
          "displayName": "third_party_reference_id"
        }
      }
    },
    {
      "description": "",
      "relativeUri": "/api/v2/accounts/{account_id}/cashout",
      "methods": [
        {
          "description": "Method to create a transfer from `BBVA User Account` to the `BBVA Settlement Account`. Money is withdrawn from user's own `BBVA User Account` and deposited in user's own `APP User Account`\n\n#### Attributes for the json body parameter\n\nName | Type | Required | Description\n--- | --- | --- | ---\n__amount__                 | Number | Required | Amount of money to transfer.\n__currency__                 | String | Required | Currency of the indicated amount. ISO-4217 format: USD, EUR ...\n__third_party_reference_id__  | String | Required | Number of up to 17 digits used for matching and reconciliation in settlement accounts.\n__description__            | String | Optional | Associated text describing the transfer's reason.\n__type__                   | String | Optional | Parameter to identify special cashout operations (refunds when identity thefts, network problems, etc). **TBD** type values.\n\n#### Response Codes\n\nStatus | Code | Description\n--- | --- | ---\n__201__              | OK | The operation completed successfully\n__400__              | invalid_currency | The currency provided is not valid\n__400__              | invalid_amount | The amount format is not valid\n__400__              | third_party_reference_id_duplicated | This third_party_reference_id already exists\n__400__              | invalid_third_party_reference_id | The third party reference id is not valid\n__400__              | description_invalid | Limit Reached On Description Field, Max 60 Characters\n__403__              | account_not_linked | The account was not linked previously\n__403__              | insufficient_fund | The account does not have enough fund\n__404__              | account_not_found | The account was not found\n",
          "protocols": [
            "HTTPS"
          ],
          "method": "post"
        }
      ],
      "relativeUriPathSegments": [
        "api",
        "v2",
        "accounts",
        "{account_id}",
        "cashout"
      ],
      "uriParameters": {
        "account_id": {
          "type": "string",
          "required": true,
          "displayName": "account_id"
        }
      }
    },
    {
      "description": "",
      "relativeUri": "/api/v2/accounts/{account_id}/cashout/{third_party_reference_id}",
      "methods": [
        {
          "description": "Method to remove a cashin operation. The operation will be removed from the transaction logs.\nA cashin operation can only be reversed in the same day it was created.\n\n#### Attributes for the json body parameter\n\nName | Type | Required | Description\n--- | --- | --- | ---\n__amount__                 | Number | Required | Amount of money to transfer.\n__currency__               | String | Required | Currency of the indicated amount. ISO-4217 format: USD, EUR ...\n__description__            | String (60) | Optional | Associated text describing the reverse's reason. Max Length 60\n",
          "protocols": [
            "HTTPS"
          ],
          "method": "delete"
        }
      ],
      "relativeUriPathSegments": [
        "api",
        "v2",
        "accounts",
        "{account_id}",
        "cashout",
        "{third_party_reference_id}"
      ],
      "uriParameters": {
        "account_id": {
          "type": "string",
          "required": true,
          "displayName": "account_id"
        },
        "third_party_reference_id": {
          "type": "string",
          "required": true,
          "displayName": "third_party_reference_id"
        }
      }
    },
    {
      "description": "",
      "relativeUri": "/api/v2/accounts/link",
      "methods": [
        {
          "description": "Method to link accounts to calling application. This will allow the application to execute operations with in the linked accounts\nwith a valid USER-TSEC token.\n\n#### Response Codes\n\nStatus   | Code | Description\n---      | --- | ---\n__200__  | OK | Account linked successfully\n__400__  | account_ids_missing| Missing account ids to link\n__403__  | account_linked | Account was already linked\n__404__  | account_not_found | The account was not found\n__404__  | account_not_valid | Account ID Invalid (This case happens if a user tries to link an account that is not his.)\n\n\nEach account will be treated separately and the response will include\n information about each linking process. The global response code will be 200 if the API could process the call\n even if each link process had actually a problem.\n",
          "protocols": [
            "HTTPS"
          ],
          "method": "post"
        }
      ],
      "relativeUriPathSegments": [
        "api",
        "v2",
        "accounts",
        "link"
      ]
    },
    {
      "description": "Removes the linked accounts association to the calling application. This will revoke the application permission\nto execute operations in these accounts with a valid USER-TSEC token.\n",
      "relativeUri": "/api/v2/accounts/unlink",
      "methods": [
        {
          "description": "#### Response Codes\n\nStatus | Code | Description\n--- | --- | ---\n__200__ | OK | Account unlinked successfully\n__400__ | account_ids_missing| Missing account ids to unlink\n__403__ | account_not_linked | The account was not linked previously\n__404__ | account_not_found | The account was not found\n__404__ | account_not_valid | Account ID Invalid (This case happens if a user tries to unlink an account that is not his.)\n\n\nEach account will be treated separately and the response will include\n information about each unlinking process. The global response code will be 200 if the API could process the call\n even if each link process had actually a problem.\n",
          "protocols": [
            "HTTPS"
          ],
          "method": "post"
        }
      ],
      "relativeUriPathSegments": [
        "api",
        "v2",
        "accounts",
        "unlink"
      ]
    },
    {
      "description": "",
      "relativeUri": "/api/v2/accounts/{account_id}/transactions{?dateFrom,dateTo,amountFrom,amountTo,next}",
      "methods": [
        {
          "description": "Method will return all transactions for a specific account\n\n\n#### Response attributes\n\nName | Type | Description\n--- | --- | ---\n__operation_number__  | String | Transaction ID.\n__posted_date__        | String | Date of the transaction was done\n__description__     | String | Description of the type of transaction.\n__reversal_id__  | String | Only appear if the transaction settlement is cashIn/cashOut\n__amount__  | Number | amount of the transaction.\n__posted_balance__       | Number | Posted balance of the account after the transaction.\n__currency__       | String | Currency of the transaction\n__check_number__   | String | Check number of the transaction.\n__transaction_type__  | String | Type of transactions\n",
          "protocols": [
            "HTTPS"
          ],
          "method": "get"
        }
      ],
      "relativeUriPathSegments": [
        "api",
        "v2",
        "accounts",
        "{account_id}",
        "transactions{?dateFrom,dateTo,amountFrom,amountTo,next}"
      ],
      "uriParameters": {
        "account_id": {
          "type": "string",
          "required": true,
          "displayName": "account_id"
        },
        "?dateFrom,dateTo,amountFrom,amountTo,next": {
          "type": "string",
          "required": true,
          "displayName": "?dateFrom,dateTo,amountFrom,amountTo,next"
        }
      }
    },
    {
      "description": "",
      "relativeUri": "/api/v2/reconciliation",
      "methods": [
        {
          "description": "Method receives a reconciliation file, that will be processed asynchronously.\n\n#### Parameters\n\nName | Type | Required | Description\n--- | --- | --- | ---\n__hash__                   | Number | Required | MD5 hash of the uploaded file, ie : `38871de9c8ff2308884092960c01c94b`\n__file__                  | String | Required | Binary data of file. Content-Disposition header should include filename and size values.\n\n#### Response Codes\n\nStatus | Code | Description\n--- | --- | ---\n__201__ | OK | The reconciliation file was uploaded successfully.\n__400__ | invalid_format | There was some problem while processing the file. The message will include if possible the line that caused the problem.\n__400__ | missing_header | The header <header_name> is not present.\n",
          "protocols": [
            "HTTPS"
          ],
          "method": "post"
        }
      ],
      "relativeUriPathSegments": [
        "api",
        "v2",
        "reconciliation"
      ]
    },
    {
      "description": "",
      "relativeUri": "/api/v2/reconciliation{?dateFrom,dateTo,amountFrom,amountTo,next}",
      "methods": [
        {
          "description": "Method allows third party companies to gather information related to transactions performed in the Agency's Bank account.\n\n#### Response attributes\n\nName | Type | Description\n--- | --- | ---\n__operation_number__  | String | Transaction ID.\n__posted_date__        | String | Date of the transaction was done\n__description__     | String | Description of the type of transaction.\n__reversal_id__  | String | Only appear if the transaction settlement is cashIn/cashOut\n__amount__  | Number | amount of the transaction.\n__balance__       | Number | Balance of the account after the transaction.\n__currency__       | String | Currency of the transaction\n__check_number__   | String | Check number of the transaction.\n",
          "protocols": [
            "HTTPS"
          ],
          "method": "get"
        }
      ],
      "relativeUriPathSegments": [
        "api",
        "v2",
        "reconciliation{?dateFrom,dateTo,amountFrom,amountTo,next}"
      ],
      "uriParameters": {
        "?dateFrom,dateTo,amountFrom,amountTo,next": {
          "type": "string",
          "required": true,
          "displayName": "?dateFrom,dateTo,amountFrom,amountTo,next"
        }
      }
    },
    {
      "description": "Application services that require an APP-TSEC to authenticate.\n\n___This service is only available in sandbox mode___\n\nInitializes all the data, this service must be called before any other, to create the databases to the logged app.\n\nIt will create randomized data for test users.\n\nIf its called on an existing app, it will clean the database and create the data again.\n",
      "relativeUri": "/api/v2/application/init",
      "methods": [
        {
          "description": "In the sandbox implementation, it's possible to initialize accounts and users with data loaded by developers. All information loaded this way is optional and when not present it will default to a random valid value.\n\n#### Attributes for the json body parameter\n\nName | Type | Required | Description\n--- | --- | --- | ---\n__users__                | Array   | Optional | List of users to insert in the application\n__user[].id__            | String  | Optional | User identifier. Defaults to uuid v4.\n__user[].username__      | String  | Optional | Username for login into the app. Defaults to `user_[seq_number]`. Also used as password.\n__user[].name__          | String  | Optional | Name and last name of the user. Defaults to random name.\n__accounts__             | Array   | Optional | List of accounts to insert in the application\n__account[].account_id__ | String  | Optional | Account identifier. Defaults to a random 4 digit string prefixed with type, ex: `02-1234`.\n__account[].number__     | Number  | Optional | Last digits of the account number. It gets prefixed with '*******'. Defaults to a random 4 digit string.\n__account[].alias__      | String  | Optional | User description of the account. Defaults to a random description.\n__account[].linked__     | Boolean | Optional | Indicates if the account have been linked to the application. Defaults randomly to `true` or `false`.\n__account[].balance__    | Number  | Optional | Amount of money in the account. Default to a random value from 0 to 1000.\n__account[].currency__   | String  | Optional | Account's type of currency. Defaults to `USD`.\n__account[].type__       | String  | Optional | Type of account from the valid `account_type`s. Defaults to a random valid type.\n__account[].user__       | String  | Optional | A username from the `users` list who owns the account. Defaults to a random user of the `users` list.\n",
          "protocols": [
            "HTTPS"
          ],
          "method": "post"
        }
      ],
      "relativeUriPathSegments": [
        "api",
        "v2",
        "application",
        "init"
      ]
    }
  ]
}